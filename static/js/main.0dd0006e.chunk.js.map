{"version":3,"sources":["Detail.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["제목","styled","div","h4","props","색상","Info","재고스","Detail","useState","alert","alert변경","입력값","입력값변경","useEffect","타이머","setTimeout","console","log","clearTimeout","history","useHistory","id","useParams","className","onChange","e","target","value","src","alt","width","shoes","title","content","price","재고","onClick","재고변경","goBack","Card","i","App","Data","shoes변경","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","a","axios","get","then","결과","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dd0006e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n//nodesass설치가안되서주석처리\r\n// import \"./Detail.scss\";\r\n\r\nlet box = styled.div`\r\n  padding: 20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.색상};\r\n`;\r\nconst Detail = (props) => {\r\n  let [alert, alert변경] = useState(true);\r\n  let [입력값, 입력값변경] = useState(\"\");\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => {\r\n      alert변경(false);\r\n    }, 2000);\r\n    console.log(\"안녕\");\r\n    return () => {\r\n      clearTimeout(타이머);\r\n    };\r\n  }, [alert]);\r\n\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n  return (\r\n    <div className=\"container\">\r\n      <box>\r\n        <제목 색상={\"blue\"}>상세페이지</제목>\r\n      </box>\r\n      {입력값}\r\n      <input\r\n        onChange={(e) => {\r\n          입력값변경(e.target.value);\r\n        }}\r\n      />\r\n      {alert === true ? (\r\n        <div className=\"my-alert2\">\r\n          <p>재고가 얼마 남지 않았습니다.</p>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n            alt=\"img\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\r\n          <p>{props.shoes[id].content}</p>\r\n          <p>{props.shoes[id].price}원</p>\r\n          <Info 재고스={props.재고[0]}></Info>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.재고변경([9, 8, 7]);\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              history.goBack();\r\n              //abcd경로로 이동하세요\r\n              // history.push('/abcd')\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Info(props) {\r\n  return <p>재고: {props.재고스}</p>;\r\n}\r\nexport default Detail;\r\n","export default [\r\n  {\r\n    id : '0',\r\n    title : \"White and Black\",\r\n    content : \"Born in France\",\r\n    price : 120000\r\n  },\r\n\r\n  {\r\n    id : 1,\r\n    title : \"Red Knit\",\r\n    content : \"Born in Seoul\",\r\n    price : 110000\r\n  },\r\n\r\n  {\r\n    id : 2,\r\n    title : \"Grey Yordan\",\r\n    content : \"Born in the States\",\r\n    price : 130000\r\n  }\r\n] \r\n","import React, { useState } from \"react\";\nimport {\n  Navbar,\n  Container,\n  Nav,\n  NavDropdown,\n  Button,\n  Jumbotron,\n} from \"react-bootstrap\";\nimport \"./App.css\";\nimport Detail from \"./Detail\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport Data from \"./data.js\";\nimport axios from \"axios\";\n\nfunction App() {\n  // shoes useState를 Detail.js에 적어도되지만\n  // 중요한 데이터의 경우 여기에 적어야함.역방향전송이어렵기때문\n  const [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">\n                Detail\n              </Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* Switch Route중복을 막아주고 첫 path를 보여줌 */}\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron>\n            <p>\n              Using a series of utilities, you can create this jumbotron, just\n              like the one in previous versions of Bootstrap. Check out the\n              examples below for how you can remix and restyle it to your\n              liking.\n            </p>\n            <Button variant=\"outline-secondary\">Secondary</Button>\n          </Jumbotron>\n          <div className=\"container\">\n            <div className=\"row\">\n              {shoes.map((a, i) => {\n                return <Card shoes={shoes[i]} i={i} />;\n              })}\n            </div>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                //fetch는 json을 object로 바꿔주지 않음\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((결과) => {\n                    console.log(결과.data);\n                    shoes변경([...shoes, ...결과.data]);\n                  })\n                  .catch(() => {\n                    console.log(\"실패했어요\");\n                  });\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n\n        {/* url의 파라미터문법  */}\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nfunction Card(props) {\n  return (\n    <div className=\"col-md-4\" key=\"id\">\n      <img\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" + (props.i + 1) + \".jpg\"\n        }\n        width=\"100%\"\n        alt=\"사진1\"\n      ></img>\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content}& {props.shoes.price}\n      </p>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}